import{_ as n,E as l,o,c as h,J as i,a as t,X as a,m as e}from"./chunks/framework.i4rCae0I.js";const w=JSON.parse('{"title":"setupCache()","description":"","frontmatter":{},"headers":[],"relativePath":"config.md","filePath":"config.md","lastUpdated":1705634432000}'),r={name:"config.md"},p=a("",6),d=a("",4),c=a("",4),k=e("ul",null,[e("li",null,[t("Type: "),e("code",null,"Record<string, Deferred<CachedResponse>>")]),e("li",null,[t("Default: "),e("code",null,"{}")])],-1),u=e("p",null,"A simple object that will hold a promise for each pending request. Used to handle concurrent requests.",-1),g=e("p",null,"You’d normally not need to change this, but it is exposed in case you need to use it as some sort of listener of know when a request is waiting for other to finish.",-1),E=e("h2",{id:"headerinterpreter",tabindex:"-1"},[t("headerInterpreter "),e("a",{class:"header-anchor",href:"#headerinterpreter","aria-label":'Permalink to "headerInterpreter"'},"​")],-1),y=a("",7),_=a("",6),f=a("",6),m=a("",5);function b(F,T,C,A,x,I){const s=l("Badge");return o(),h("div",null,[p,i(s,{text:"optional",type:"warning"}),d,i(s,{text:"optional",type:"warning"}),c,i(s,{text:"optional",type:"warning"}),k,u,g,E,i(s,{text:"optional",type:"warning"}),y,i(s,{text:"optional",type:"warning"}),_,i(s,{text:"optional",type:"warning"}),f,i(s,{text:"dev only",type:"danger"}),t(),i(s,{text:"optional",type:"warning"}),m])}const D=n(r,[["render",b]]);export{w as __pageData,D as default};
