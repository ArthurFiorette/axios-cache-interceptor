import{_ as t,D as l,o as p,c as r,G as a,a as o,R as n,z as e}from"./chunks/framework.8e8e72cd.js";const q=JSON.parse('{"title":"Global","description":"","frontmatter":{},"headers":[],"relativePath":"config.md","filePath":"config.md","lastUpdated":1686330189000}'),c={name:"config.md"},i=n("",5),d=n("",4),y=n("",4),D=e("ul",null,[e("li",null,[o("Type: "),e("code",null,"Record<string, Deferred<CachedResponse>>")]),e("li",null,[o("Default: "),e("code",null,"{}")])],-1),u=e("p",null,"A simple object that will hold a promise for each pending request. Used to handle concurrent requests.",-1),h=e("p",null,"You’d normally not need to change this, but it is exposed in case you need to use it as some sort of listener of know when a request is waiting for other to finish.",-1),F=e("h2",{id:"headerinterpreter",tabindex:"-1"},[o("headerInterpreter "),e("a",{class:"header-anchor",href:"#headerinterpreter","aria-label":'Permalink to "headerInterpreter"'},"​")],-1),C=n("",7),A=n("",6),g=n("",6),f=n("",5);function _(m,b,T,w,x,I){const s=l("Badge");return p(),r("div",null,[i,a(s,{text:"optional",type:"warning"}),d,a(s,{text:"optional",type:"warning"}),y,a(s,{text:"optional",type:"warning"}),D,u,h,F,a(s,{text:"optional",type:"warning"}),C,a(s,{text:"optional",type:"warning"}),A,a(s,{text:"optional",type:"warning"}),g,a(s,{text:"dev only",type:"danger"}),o(),a(s,{text:"optional",type:"warning"}),f])}const S=t(c,[["render",_]]);export{q as __pageData,S as default};
