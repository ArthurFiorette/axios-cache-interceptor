import{_ as t,C as l,o as p,c as r,H as a,a as o,S as n,k as s}from"./chunks/framework.bc25502e.js";const I=JSON.parse('{"title":"setupCache()","description":"","frontmatter":{},"headers":[],"relativePath":"config.md","filePath":"config.md","lastUpdated":1697184924000}'),c={name:"config.md"},i=n("",5),d=n("",4),y=n("",4),u=s("ul",null,[s("li",null,[o("Type: "),s("code",null,"Record<string, Deferred<CachedResponse>>")]),s("li",null,[o("Default: "),s("code",null,"{}")])],-1),h=s("p",null,"A simple object that will hold a promise for each pending request. Used to handle concurrent requests.",-1),E=s("p",null,"You’d normally not need to change this, but it is exposed in case you need to use it as some sort of listener of know when a request is waiting for other to finish.",-1),g=s("h2",{id:"headerinterpreter",tabindex:"-1"},[o("headerInterpreter "),s("a",{class:"header-anchor",href:"#headerinterpreter","aria-label":'Permalink to "headerInterpreter"'},"​")],-1),_=n("",7),f=n("",6),m=n("",6),b=n("",5);function T(C,F,A,x,k,w){const e=l("Badge");return p(),r("div",null,[i,a(e,{text:"optional",type:"warning"}),d,a(e,{text:"optional",type:"warning"}),y,a(e,{text:"optional",type:"warning"}),u,h,E,g,a(e,{text:"optional",type:"warning"}),_,a(e,{text:"optional",type:"warning"}),f,a(e,{text:"optional",type:"warning"}),m,a(e,{text:"dev only",type:"danger"}),o(),a(e,{text:"optional",type:"warning"}),b])}const v=t(c,[["render",T]]);export{I as __pageData,v as default};
