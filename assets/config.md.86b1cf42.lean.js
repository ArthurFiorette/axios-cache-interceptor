import{_ as o,c as t,a as n,b as l,d as a,e as s,o as p,r}from"./app.e4705e7f.js";const k=JSON.parse('{"title":"Global","description":"","frontmatter":{},"headers":[{"level":2,"title":"storage","slug":"storage","link":"#storage","children":[]},{"level":2,"title":"generateKey","slug":"generatekey","link":"#generatekey","children":[]},{"level":2,"title":"waiting","slug":"waiting","link":"#waiting","children":[]},{"level":2,"title":"headerInterpreter","slug":"headerinterpreter","link":"#headerinterpreter","children":[]},{"level":2,"title":"requestInterceptor","slug":"requestinterceptor","link":"#requestinterceptor","children":[]},{"level":2,"title":"responseInterceptor","slug":"responseinterceptor","link":"#responseinterceptor","children":[]},{"level":2,"title":"debug","slug":"debug","link":"#debug","children":[]}],"relativePath":"config.md","lastUpdated":1670290591000}'),c={name:"config.md"},i=a("",5),d=a("",4),y=a("",4),u=s("ul",null,[s("li",null,[l("Type: "),s("code",null,"Record<string, Deferred<CachedResponse>>")]),s("li",null,[l("Default: "),s("code",null,"{}")])],-1),D=s("p",null,"A simple object that will hold a promise for each pending request. Used to handle concurrent requests.",-1),h=s("p",null,"You'd normally not need to change this, but it is exposed in case you need to use it as some sort of listener of know when a request is waiting for other to finish.",-1),F=s("h2",{id:"headerinterpreter",tabindex:"-1"},[l("headerInterpreter "),s("a",{class:"header-anchor",href:"#headerinterpreter","aria-hidden":"true"},"#")],-1),A=a("",6),C=a("",6),b=a("",6),g=a("",5);function _(m,f,T,w,x,I){const e=r("Badge");return p(),t("div",null,[i,n(e,{text:"optional",type:"warning"}),d,n(e,{text:"optional",type:"warning"}),y,n(e,{text:"optional",type:"warning"}),u,D,h,F,n(e,{text:"optional",type:"warning"}),A,n(e,{text:"optional",type:"warning"}),C,n(e,{text:"optional",type:"warning"}),b,n(e,{text:"dev only",type:"danger"}),l(),n(e,{text:"optional",type:"warning"}),g])}const S=o(c,[["render",_]]);export{k as __pageData,S as default};
