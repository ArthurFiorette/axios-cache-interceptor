import{_ as e,o as s,c as a,S as n}from"./chunks/framework.08cb68c8.js";const u=JSON.parse('{"title":"Response object","description":"","frontmatter":{},"headers":[],"relativePath":"config/response-object.md","filePath":"config/response-object.md","lastUpdated":1698414254000}'),o={name:"config/response-object.md"},t=n(`<h1 id="response-object" tabindex="-1">Response object <a class="header-anchor" href="#response-object" aria-label="Permalink to &quot;Response object&quot;">​</a></h1><p>Axios cache interceptor returns a slightly changed than the original axios response. Containing information about the cache and other needed properties.</p><h2 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id&quot;">​</a></h2><ul><li>Type: <code>string</code></li></ul><p>The <a href="./../guide/request-id">Request ID</a> used in this request.</p><p>It may have been generated by the <a href="./../guide/request-id#custom-generator">Key Generator</a> or a custom one provided by <a href="./request-specifics#id"><code>config.id</code></a></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">response</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> axios.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;url&#39;</span><span style="color:#E1E4E8;">, { id: </span><span style="color:#9ECBFF;">&#39;my-overridden-id&#39;</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// This request used &#39;my-overridden-id&#39; and</span></span>
<span class="line"><span style="color:#6A737D;">// not the one generated by the key generator</span></span>
<span class="line"><span style="color:#E1E4E8;">response.id </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;my-overridden-id&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">response</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> axios.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;url&#39;</span><span style="color:#24292E;">, { id: </span><span style="color:#032F62;">&#39;my-overridden-id&#39;</span><span style="color:#24292E;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// This request used &#39;my-overridden-id&#39; and</span></span>
<span class="line"><span style="color:#6A737D;">// not the one generated by the key generator</span></span>
<span class="line"><span style="color:#24292E;">response.id </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;my-overridden-id&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="cached" tabindex="-1">cached <a class="header-anchor" href="#cached" aria-label="Permalink to &quot;cached&quot;">​</a></h2><ul><li>Type: <code>boolean</code></li></ul><p>A simple boolean indicating if the request returned data from the cache or from the network call.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This does not indicated if the request was capable of being cached or not, as options like <a href="./request-specifics#cache-override"><code>cache.override</code></a> may have been enabled.</p></div>`,11),p=[t];function l(r,c,i,d,h,y){return s(),a("div",null,p)}const b=e(o,[["render",l]]);export{u as __pageData,b as default};
