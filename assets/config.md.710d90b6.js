import{_ as o,c as t,a as n,b as l,d as a,e as s,o as p,r}from"./app.59d19365.js";const k=JSON.parse('{"title":"Global","description":"","frontmatter":{},"headers":[{"level":2,"title":"storage","slug":"storage","link":"#storage","children":[]},{"level":2,"title":"generateKey","slug":"generatekey","link":"#generatekey","children":[]},{"level":2,"title":"waiting","slug":"waiting","link":"#waiting","children":[]},{"level":2,"title":"headerInterpreter","slug":"headerinterpreter","link":"#headerinterpreter","children":[]},{"level":2,"title":"requestInterceptor","slug":"requestinterceptor","link":"#requestinterceptor","children":[]},{"level":2,"title":"responseInterceptor","slug":"responseinterceptor","link":"#responseinterceptor","children":[]},{"level":2,"title":"debug","slug":"debug","link":"#debug","children":[]}],"relativePath":"config.md","lastUpdated":1670290591000}'),c={name:"config.md"},i=a(`<h1 id="global" tabindex="-1">Global <a class="header-anchor" href="#global" aria-hidden="true">#</a></h1><p>These are properties that are used and shared by the entire application.</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> axios </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setupCache</span><span style="color:#A6ACCD;">(axios</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> OPTIONS)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <code>setupCache</code> function receives global options and all <a href="./config/request-specifics">request specifics</a> ones too. This way, you can customize the defaults for all requests.</p></div><h2 id="storage" tabindex="-1">storage <a class="header-anchor" href="#storage" aria-hidden="true">#</a></h2>`,5),d=a('<ul><li>Type: <code>AxiosStorage</code></li><li>Default: <code>buildMemoryStorage()</code></li></ul><p>The object responsible to save, retrieve and serialize (if needed) cache data.</p><p>See the <a href="./guide/storages">Storages</a> page for more information.</p><h2 id="generatekey" tabindex="-1">generateKey <a class="header-anchor" href="#generatekey" aria-hidden="true">#</a></h2>',4),y=a('<ul><li>Type: <code>KeyGenerator&lt;unknown, unknown&gt;</code></li><li>Default: <code>defaultKeyGenerator</code></li></ul><p>The function used to create different keys for each request. Defaults to a function that priorizes the id, and if not specified, a string is generated using the <code>method</code>, <code>baseURL</code>, <code>params</code>, <code>data</code> and <code>url</code>.</p><p>You can learn on how to use them on the <a href="./guide/request-id#custom-generator">Request ID</a> page.</p><h2 id="waiting" tabindex="-1">waiting <a class="header-anchor" href="#waiting" aria-hidden="true">#</a></h2>',4),u=s("ul",null,[s("li",null,[l("Type: "),s("code",null,"Record<string, Deferred<CachedResponse>>")]),s("li",null,[l("Default: "),s("code",null,"{}")])],-1),D=s("p",null,"A simple object that will hold a promise for each pending request. Used to handle concurrent requests.",-1),h=s("p",null,"You'd normally not need to change this, but it is exposed in case you need to use it as some sort of listener of know when a request is waiting for other to finish.",-1),F=s("h2",{id:"headerinterpreter",tabindex:"-1"},[l("headerInterpreter "),s("a",{class:"header-anchor",href:"#headerinterpreter","aria-hidden":"true"},"#")],-1),A=a(`<ul><li>Type: <code>HeadersInterpreter</code></li><li>Default: <code>defaultHeaderInterpreter</code></li></ul><p>The function used to interpret all headers from a request and determine a time to live (<code>ttl</code>) number.</p><p>The possible returns are:</p><ul><li><code>&#39;dont cache&#39;</code>: the request will not be cached.</li><li><code>&#39;not enough headers&#39;</code>: the request will find other ways to determine the TTL value.</li><li><code>number</code>: used as the TTL value.</li></ul><details class="details custom-block"><summary>Example of a custom headerInterpreter</summary><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">setupCache</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">HeaderInterpreter</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">axios-cache-interceptor</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> myHeaderInterpreter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HeaderInterpreter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">headers</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">headers</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x-my-custom-header</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">]) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">seconds</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">headers</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x-my-custom-header</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">seconds</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dont cache</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">seconds</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">not enough headers</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></details><h2 id="requestinterceptor" tabindex="-1">requestInterceptor <a class="header-anchor" href="#requestinterceptor" aria-hidden="true">#</a></h2>`,6),C=a('<ul><li>Type: <code>AxiosInterceptor&lt;CacheRequestConfig&lt;unknown, unknown&gt;&gt;</code></li><li>Default: <code>defaultRequestInterceptor()</code></li></ul><p>The function that will be used to intercept the request before it is sent to the axios adapter.</p><p>It is the main function of this library, as it is the bridge between the axios request and the cache.</p><p>It wasn&#39;t meant to be changed, but if you need to, you can do it by passing a new function to this property.</p><p>See its code for more information <a href="https://github.com/arthurfiorette/axios-cache-interceptor/tree/main/src/interceptors" target="_blank" rel="noreferrer">here</a>.</p><h2 id="responseinterceptor" tabindex="-1">responseInterceptor <a class="header-anchor" href="#responseinterceptor" aria-hidden="true">#</a></h2>',6),b=a('<ul><li>Type: <code>AxiosInterceptor&lt;CacheAxiosResponse&lt;unknown, unknown&gt;&gt;</code></li><li>Default: <code>defaultResponseInterceptor()</code></li></ul><p>The function that will be used to intercept the request after it is returned by the axios adapter.</p><p>It is the second most important function of this library, as it is the bridge between the axios response and the cache.</p><p>It wasn&#39;t meant to be changed, but if you need to, you can do it by passing a new function to this property.</p><p>See its code for more information <a href="https://github.com/arthurfiorette/axios-cache-interceptor/tree/main/src/interceptors" target="_blank" rel="noreferrer">here</a>.</p><h2 id="debug" tabindex="-1">debug <a class="header-anchor" href="#debug" aria-hidden="true">#</a></h2>',6),g=a(`<ul><li>Type: <code>(msg: { id?: string; msg?: string; data?: unknown }) =&gt; void</code> or <code>undefined</code></li><li>Default: <code>undefined</code></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This option only works when targeting a <a href="./guide/debugging">Development</a> build.</p></div><p>The debug option will print debug information in the console. It is good if you need to trace any undesired behavior or issue. You can enable it by setting <code>debug</code> to a function that receives an string and returns nothing.</p><p>Read the <a href="./guide/debugging">Debugging</a> page for the complete guide.</p><details class="details custom-block"><summary>Example of a custom debug function</summary><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Will print debug info in the console.</span></span>
<span class="line"><span style="color:#82AAFF;">setupCache</span><span style="color:#A6ACCD;">(axios</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">debug</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Own logging platform.</span></span>
<span class="line"><span style="color:#82AAFF;">setupCache</span><span style="color:#A6ACCD;">(axios</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> myLoggerExample</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Disables debug. (default)</span></span>
<span class="line"><span style="color:#82AAFF;">setupCache</span><span style="color:#A6ACCD;">(axios</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">debug</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></details>`,5);function _(m,f,T,w,x,I){const e=r("Badge");return p(),t("div",null,[i,n(e,{text:"optional",type:"warning"}),d,n(e,{text:"optional",type:"warning"}),y,n(e,{text:"optional",type:"warning"}),u,D,h,F,n(e,{text:"optional",type:"warning"}),A,n(e,{text:"optional",type:"warning"}),C,n(e,{text:"optional",type:"warning"}),b,n(e,{text:"dev only",type:"danger"}),l(),n(e,{text:"optional",type:"warning"}),g])}const S=o(c,[["render",_]]);export{k as __pageData,S as default};
