import{_ as n,E as l,o,c as r,J as i,a as t,a4 as a,m as e}from"./chunks/framework.7P8J3_SI.js";const I=JSON.parse('{"title":"setupCache()","description":"","frontmatter":{},"headers":[],"relativePath":"config.md","filePath":"config.md","lastUpdated":1710001173000}'),h={name:"config.md"},p=a("",6),d=a("",4),c=a("",8),k=e("ul",null,[e("li",null,[t("Type: "),e("code",null,"Record<string, Deferred<CachedResponse>>")]),e("li",null,[t("Default: "),e("code",null,"{}")])],-1),u=e("p",null,"A simple object that will hold a promise for each pending request. Used to handle concurrent requests.",-1),g=e("p",null,"You’d normally not need to change this, but it is exposed in case you need to use it as some sort of listener of know when a request is waiting for other to finish.",-1),y=e("h2",{id:"headerinterpreter",tabindex:"-1"},[t("headerInterpreter "),e("a",{class:"header-anchor",href:"#headerinterpreter","aria-label":'Permalink to "headerInterpreter"'},"​")],-1),E=a("",7),m=a("",6),b=a("",6),f=a("",5);function _(F,T,C,A,w,v){const s=l("Badge");return o(),r("div",null,[p,i(s,{text:"optional",type:"warning"}),d,i(s,{text:"optional",type:"warning"}),c,i(s,{text:"optional",type:"warning"}),k,u,g,y,i(s,{text:"optional",type:"warning"}),E,i(s,{text:"optional",type:"warning"}),m,i(s,{text:"optional",type:"warning"}),b,i(s,{text:"dev only",type:"danger"}),t(),i(s,{text:"optional",type:"warning"}),f])}const D=n(h,[["render",_]]);export{I as __pageData,D as default};
